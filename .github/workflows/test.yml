# This GitHub action runs your tests for each commit push and/or PR. Optionally
# you can turn it on using a cron schedule for regular testing.
#
name: Tests

on:
  pull_request:
    paths-ignore:
      - "README.md"
      - "LICENSE"
  push:
    paths-ignore:
      - "README.md"
      - "LICENSE"
  # For systems with an upstream API that could drift unexpectedly (like most SaaS systems, etc.),
  # we recommend testing at a regular interval not necessarily tied to code changes. This will
  # ensure you are alerted to something breaking due to an API change, even if the code did not
  # change.
  # schedule:
  #   - cron: '0 13 * * *'

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # ensure the code builds...
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version-file: "go.mod"
          cache: true
      - run: go mod download
      - run: go build -v .

  # run acceptance tests in a matrix with Terraform core versions
  test:
    name: Matrix Test
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - "0.12.31"
          - "0.13.7"
          - "0.14.11"
          - "0.15.5"
          - "1.0.11"
          - "1.1.9"
          - "1.2.9"
          - "1.3.*"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version-file: "go.mod"
          cache: true
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - env:
          TF_ACC: "1"
          ASSUME_NO_MOVING_GC_UNSAFE_RISK_IT_WITH: "go1.20"
        run: go test -v -cover ./internal/provider/
